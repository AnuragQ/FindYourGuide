# Generated by Django 5.0.2 on 2024-03-15 05:15

import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Offering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('availability_start_date', models.DateField(default=django.utils.timezone.now)),
                ('availability_end_date', models.DateField(default=django.utils.timezone.now)),
                ('offering_type', models.CharField(choices=[('accomodation', 'Accomodation'), ('sight-seeing', 'Sight-seeing'), ('food-tour', 'Food-tour'), ('ride-share', 'ride-share')], default='accomodation', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('offering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='main_app.offering')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.userprofile')),
            ],
        ),
        migrations.AddField(
            model_name='offering',
            name='host_user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='offerings', to='main_app.userprofile'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('offering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='main_app.offering')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_start_date', models.DateField()),
                ('booking_end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('offering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='main_app.offering')),
                ('guest_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.userprofile')),
            ],
        ),
    ]
